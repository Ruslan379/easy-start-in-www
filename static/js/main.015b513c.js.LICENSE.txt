/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */

/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * @remix-run/router v1.6.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */

/**
 * React Router DOM v6.11.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */

/**
 * React Router v6.11.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

//! -------------------------------- JS_3-6 (5 вопрос)---------------------------------------------

//! --------------------------------- ERROR -------------------------------------------

//! ---------------------------------------------------------------------------------------

//! IIFE - работает

//! Line 81:12:  'green' is already defined  no-redeclare

//! Line 81:19:  'blue' is already defined   no-redeclare

//! Line 81:7:   'red' is already defined    no-redeclare

//! NEW

//! Unix время

//! WARNING in src\components\App.jsx

//! this в callback-функциях

//! this в методе объекта

//! this в стрелочных функциях

//! Будет ОШИБКА,  так переменные red, green, blue уже объявлены и определены

//! Вопрос Катерины:

//! Вызываем генератор экшена и передаем текст задачи для поля payload

//! Вычисляем массив задач которые необходимо отображать в интерфейсе

//! Дата и время

//! Деструктуризация массивов

//! Добавление задачи

//! Добавление свойств:

//! Изменение значения свойства:

//! Изменение фильтра

//! Используем символ подчеркивания как имя первого параметра,

//! Контролируемые элементы

//! Методы (Геттеры)

//! На базе состояния Redux получаем производные данные

//! Навигация по DOM:

//! Обращение к свойствам объекта через квадратные скобки и через точку:

//! Отправляем результат - экшен создания задачи

//! Перебор объекта 

//! Переключение статуса

//! Поиск элементов

//! Получаем значение фильтра из состояния Redux

//! Получаем массив задач из состояния Redux

//! Получаем необходимую часть состояния state

//! Получаем ссылку на функцию отправки экшенов

//! При дестуктуризации надо сделать переименование переменных:

//! Продвинутый reduce

//! Проп который передается форме для вызова при сабмите (пока отключен)

//! Псевдомассив arguments у стрелочных функций:

//! Свойства и атрибуты

//! Сложные формы

//! Удаление задачи

//! Хук useEffect

//! Хук useState

//! потому что в этой операции он нам не нужен
